name: Run Tests and Generate Allure Report

on:
  push:
    branches:
      - main
      - dev

permissions: write-all

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          pip install -r test-requirements.txt

      - name: Run tests and generate Allure results
        run: |
          pytest --alluredir=allure-results --maxfail=5 --disable-warnings || true

      - name: Load test report history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Build test report
        uses: simple-elf/allure-report-action@master
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: allure-results
          subfolder: ${{ github.ref_name }}

      - name: Determine test status
        run: |
          STATUS_FILE="gh-pages/allure-history/${{ github.ref_name }}/status.txt"
          LATEST_RESULT="gh-pages/${{ github.ref_name }}/${{github.run_number}}/widgets/summary.json"

          if [ ! -f $LATEST_RESULT ]; then
            echo "1" > "$STATUS_FILE"
          else
            FAILED_TESTS=$(jq -r '.statistic.failed' $LATEST_RESULT)
            if [ "$FAILED_TESTS" -eq "0" ]; then
              echo "0" > "$STATUS_FILE"
            else
              echo "1" > "$STATUS_FILE"
            fi
          fi

      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history
